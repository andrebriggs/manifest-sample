---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kiali
    chart: kiali-1.0.6
    heritage: Tiller
    release: istio
  name: kiali-service-account
  namespace: istio-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kiali
    version: master
  name: kiali
  namespace: istio-system
rules:
- apiGroups:
  - ""
  - apps
  - autoscaling
  - batch
  resources:
  - configmaps
  - cronjobs
  - deployments
  - endpoints
  - horizontalpodautoscalers
  - jobs
  - namespaces
  - nodes
  - pods
  - projects
  - services
  - statefulsets
  - replicasets
  - replicationcontrollers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.istio.io
  resources:
  - apikeys
  - authorizations
  - checknothings
  - circonuses
  - deniers
  - fluentds
  - handlers
  - kubernetesenvs
  - kuberneteses
  - listcheckers
  - listentries
  - logentries
  - memquotas
  - metrics
  - opas
  - prometheuses
  - quotas
  - quotaspecbindings
  - quotaspecs
  - rbacs
  - reportnothings
  - rules
  - servicecontrolreports
  - servicecontrols
  - solarwindses
  - stackdrivers
  - statsds
  - stdios
  verbs:
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  - gateways
  - serviceentries
  - virtualservices
  verbs:
  - delete
  - get
  - list
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kiali
    chart: kiali-1.0.6
    heritage: Tiller
    release: istio
  name: istio-kiali-admin-role-binding-istio-system
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kiali
subjects:
- kind: ServiceAccount
  name: kiali-service-account
  namespace: istio-system

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kiali
  name: kiali
  namespace: istio-system
spec:
  ports:
  - name: http-kiali
    port: 20001
    protocol: TCP
  selector:
    app: kiali

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: kiali
    chart: kiali-1.0.6
    heritage: Tiller
    release: istio
  name: kiali
  namespace: istio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kiali
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        sidecar.istio.io/inject: "false"
      labels:
        app: kiali
      name: kiali
    spec:
      containers:
      - command:
        - /opt/kiali/kiali
        - -config
        - /kiali-configuration/config.yaml
        - -v
        - "4"
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SERVER_CREDENTIALS_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: kiali
        - name: SERVER_CREDENTIALS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: passphrase
              name: kiali
        - name: PROMETHEUS_SERVICE_URL
          value: http://prometheus:9090
        image: docker.io/kiali/kiali:v0.12
        name: kiali
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /kiali-configuration
          name: kiali-configuration
      serviceAccountName: kiali-service-account
      volumes:
      - configMap:
          name: kiali
        name: kiali-configuration
---
apiVersion: v1
data:
  config.yaml: |
    server:
      port: 20001
    external_services:
      jaeger:
        url: http://jaeger-query.jaeger.svc.cluster.local
      grafana:
        url: http://grafana.grafana.svc.cluster.local
kind: ConfigMap
metadata:
  labels:
    app: kiali
  name: kiali
  namespace: istio-system
